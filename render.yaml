## NOTE: The previous version of this file defined the top-level key 'services:' twice.
## In YAML, duplicate keys cause the first definition to be discarded, so the web and
## static service definitions were ignored by Render. This resulted in the service
## falling back to a dashboard-configured start command (gunicorn) which failed
## because gunicorn isn't in requirements.txt. This version merges all services
## under a single 'services:' list and explicitly uses uvicorn with multiple workers.

services:
  # Backend API Service
  - type: web
    name: lbm-arena-backend
    env: python
    region: oregon
    buildCommand: chmod +x build.sh && ./build.sh
    # Use uvicorn directly; adjust workers as needed. If you prefer gunicorn, add
    # 'gunicorn' to requirements.txt and change this to:
    # gunicorn app.main:app -k uvicorn.workers.UvicornWorker -w 4 -b 0.0.0.0:$PORT
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 4
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        sync: false  # Set this to your Supabase PostgreSQL connection string
      - key: REDIS_URL
        fromService:
          type: redis
          name: lbm-arena-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: ENVIRONMENT
        value: production
      - key: PYTHONPATH
        value: /opt/render/project/src

  # Frontend Static Site
  - type: static
    name: lbm-arena-frontend
    env: static
    buildCommand: echo "No build needed for static frontend"
    staticPublishPath: ./frontend
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # Redis Instance
  - type: redis
    name: lbm-arena-redis
    ipAllowList: []
    region: oregon
